# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run build and tests!
      - run: mvn clean install
      - run: mvn integration-test
       
       #Security Test with Veracode
      - run: ls -la src
      - run: ls -la target
      - run: curl -sSL https://download.sourceclear.com/ci.sh | sh
      - run: curl -O https://downloads.veracode.com/securityscan/gl-scanner-java-LATEST.zip
      - run: unzip gl-scanner-java-LATEST.zip gl-scanner-java.jar
      - run: java -jar gl-scanner-java.jar
            --api_id "${VCUSER}"
            --api_secret_key "${VCUSERKEY}"
            --source_dir "src/main/java/com/veracode/verademo"
            --build_dir "target/classes/com/veracode/verademo"
            --project_name "${CIRCLE_PROJECT_REPONAME}"
            --project_url "${CIRCLE_BUILD_URL}"
            --previous_job_name "${CIRCLE_PREVIOUS_BUILD_NUM}"
            --issue_counts "2:0,1:0,0:0"
            --issue_details "true"
      
      
